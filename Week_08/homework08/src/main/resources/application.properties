server.port=8088

#========这里换种方式，采用java配置实现分库分表==================
spring.main.allow-bean-definition-overriding=true
#指定mybatis信息
mybatis.config-location=classpath:mybatis-config.xml
##打印sql
spring.shardingsphere.props.sql.show=true
#
spring.shardingsphere.datasource.names=ds0,ds1
#
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3307/demo_ds_0?characterEncoding=utf-8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=
#
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3307/demo_ds_1?characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=
#
##根据用户id分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{uid % 2}
##根据订单id分表
spring.shardingsphere.sharding.tables.order.actual-data-nodes=ds$->{0..1}.order$->{0..1}
spring.shardingsphere.sharding.tables.order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.order.table-strategy.inline.algorithm-expression=order$->{id % 2}


